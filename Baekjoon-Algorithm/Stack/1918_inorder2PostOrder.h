/*
==============================+===============================================================
@ File Name : 1918_inorder2PostOrder.h
@ Author : jopemachine
@ Desc : 
@    후위 표기식
@    계산기 작성에 이용한 알고리즘.
==============================+===============================================================
*/
/*
############################################################################
############################################################################
############################################################################
############################### Fail #######################################
############################################################################
############################################################################
############################################################################
*/

#pragma once
// to use unsafe function
#pragma warning(disable: 4996)

#include <iostream>
#include <string>
#include <stack>

using namespace std;

string input;
// opeator stack
stack<char> stk;

// �Ʒ� �ڵ��� https://donggod.tistory.com/45 ���� �����Դ�
// �Ʒ� �ڵ带 ���� �� �ڵ带 ���� �۵��ϰ� ��������.
// ���� �ٽ� ���̵����� ���Ҵµ� (�ٸ� å�� �����ؼ� ®�� ������), 
// �� ���쿣 ��ȣ�� ������ �� �۵��ϴµ�, ��ȣ�� ���� �� ���װ� ����,
// ��ȣ�� �����ϴ� ���ڿ��� ���� �������� �����ߴ�

void solution_1918() {
	char str[1000]; //input
	char output[1000]; // output

	scanf("%s", str);

	stack<char> s; // +-*/(�� ������ ����
	int oIdx = 0; // ���� ���ڿ��� �ε���

	// str�� ���ڿ��� ������
	for (int i = 0; i < strlen(str); i++) {
		if (str[i] >= 'A' && str[i] <= 'Z') {
			output[oIdx++] = str[i]; // A~Z�� ���¹��ڿ��� �߰�
		}
		else {
			//�װԾƴϸ� ���� ��ȣ�̹Ƿ�
			//�Ʒ�ó�� ó��

			if (str[i] == '(') s.push(str[i]); // '('���ڴ� ������ ���ÿ� �߰�
			else if (str[i] == ')') { // ')'���ڴ� '('���ڸ� ���� ������ pop
				while (s.top() != '(') {
					output[oIdx++] = s.top();
					s.pop();
				}
				s.pop();
			}
			else if (str[i] == '*' || str[i] == '/') {
				//�켱������ ������ ���ų� �������� pop
				//( '/','*'���� �켱������ �������� ����)
				while (!s.empty() && (s.top() == '*' || s.top() == '/')) {
					output[oIdx++] = s.top();
					s.pop();
				}
				s.push(str[i]);
			}
			else { // '+', '-' �� ����
				while (!s.empty() && s.top() != '(') {
					//�켱������ ������ ���ų� �������� pop
					//('+', '-'���ٴ� ���� �켱������ �����Ƿ� '('�� ������ �� ������ pop)
					output[oIdx++] = s.top();
					s.pop();
				}
				s.push(str[i]);

			}
		}
	}

	//���ÿ� �����ִ� ���� ���� pop
	while (!s.empty()) {
		output[oIdx++] = s.top();
		s.pop();
	}
	output[oIdx] = '\0';

	printf("%s\n", output);

}


/*
######################################
######################################
######################################
################ Fail ################
######################################
######################################
######################################
*/

void solve_1918() {

	cin >> input;

	for (int i = 0; i < input.size(); i++) {

		// �켱���� 1
		if (input.at(i) == '*' || input.at(i) == '/') {

			while (!stk.empty() && (stk.top() == '*' || stk.top() == '/')) {
				cout << stk.top();
				stk.pop();
			}
			stk.push(input.at(i));
		}

		// �켱���� 2
		else if (input.at(i) == '+' || input.at(i) == '-') {

			while (!stk.empty() && stk.top() != '(') {
				cout << stk.top();
				stk.pop();
			}
			stk.push(input.at(i));
		}

		// �켱���� 3
		else if (input.at(i) == '(') {
			stk.push('(');
		}

		// �켱���� 4
		else if (input.at(i) == ')') {

			while (stk.top() != '(') {

				cout << stk.top();
				stk.pop();

			}
			stk.pop();
		}


		// ���ĺ�
		else {
			cout << input.at(i);
		}

	}

	while (!stk.empty()) {
		cout << stk.top();
		stk.pop();
	}
}
